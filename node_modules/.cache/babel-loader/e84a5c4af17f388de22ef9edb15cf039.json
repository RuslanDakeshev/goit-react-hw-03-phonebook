{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { customAlphabet } from 'nanoid';\nimport { Wrapper, Label, Input, Btn, Container } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nanoid = customAlphabet('1234567890', 3);\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n  id: nanoid()\n};\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      INITIAL_STATE\n    };\n    this.nanoid = customAlphabet('1234567890abcdef', 10);\n    this.nameInputId = nanoid();\n    this.numberInputId = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit({\n        INITIAL_STATE\n      });\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: this.nameInputId,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            id: this.nameInputId,\n            value: this.state.name,\n            onChange: this.handleChange,\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: this.numberInputId,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"tel\",\n            name: \"number\",\n            id: this.numberInputId,\n            value: this.state.number,\n            onChange: this.handleChange,\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Btn, {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"names":["React","Component","PropTypes","customAlphabet","Wrapper","Label","Input","Btn","Container","nanoid","INITIAL_STATE","name","number","id","Form","state","nameInputId","numberInputId","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","contacts","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { customAlphabet } from 'nanoid';\nimport { Wrapper, Label, Input, Btn, Container } from './Form.styled';\n\nconst nanoid = customAlphabet('1234567890', 3);\n\nconst INITIAL_STATE = {\n  name: '',\n    number: '',\n  id: nanoid()\n};\n\nclass Form extends Component {\n  state = {\n    \n    INITIAL_STATE \n    \n  };\n  nanoid = customAlphabet('1234567890abcdef', 10);\n  nameInputId = nanoid();\n  numberInputId = nanoid();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  //   handleNameChange = event => {\n  //     // console.log(event.currentTarget.value);\n  //     this.setState({ name: event.currentTarget.value });\n  //   };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    this.props.onSubmit({\n      INITIAL_STATE\n    }\n);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: [], name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <Container onSubmit={this.handleSubmit}>\n        <Wrapper>\n          <Label htmlFor={this.nameInputId}>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id={this.nameInputId}\n              value={this.state.name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n        </Wrapper>\n\n        <Wrapper>\n          <Label htmlFor={this.numberInputId}>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              id={this.numberInputId}\n              value={this.state.number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n        </Wrapper>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </Container>\n    );\n  }\n}\n\nForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}