{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n    this.id = nanoid();\n\n    this.handleNameChange = event => {\n      // console.log(event.currentTarget.value);\n      this.setState({\n        name: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: this.id,\n          value: this.state.name,\n          onChange: this.handleNameChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"names":["React","Component","nanoid","Form","state","contacts","name","id","handleNameChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","console","log","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KADmB;AAAA,SAMzBC,EANyB,GAMpBL,MAAM,EANc;;AAAA,SAOzBM,gBAPyB,GAONC,KAAK,IAAI;AAC5B;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEG,KAAK,CAACE,aAAN,CAAoBC;AAA3B,OAAd;AACC,KAVwB;;AAAA,SAYzBC,YAZyB,GAYVC,CAAC,IAAI;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AAEA,WAAKc,KAAL,CAAWC,QAAX,CAAoB,KAAKf,KAAzB;AAEA,WAAKgB,KAAL;AACH,KAnBwB;;AAAA,SAqBzBA,KArByB,GAqBjB,MAAM;AACV,WAAKV,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAE,EAAX;AAClBC,QAAAA,IAAI,EAAE;AADY,OAAd;AAEH,KAxBwB;AAAA;;AA0B3Be,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAE,IAAhB;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEU,UAAA,IAAI,EAAC,MAFf;AAGU,UAAA,EAAE,EAAE,KAAKN,EAHnB;AAIE,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,IAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKE,gBALjB;AAME,UAAA,OAAO,EAAC,wHANV;AAOE,UAAA,KAAK,EAAC,wIAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9C0B;;AAiD7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid'\n\nclass Form extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n    \n    id = nanoid()\n    handleNameChange = event => {\n    // console.log(event.currentTarget.value);\n    this.setState({name: event.currentTarget.value})\n    }\n    \n    handleSubmit = e => {\n    e.preventDefault();\n        console.log(this.state);\n        \n        this.props.onSubmit(this.state)\n\n        this.reset();\n    }\n    \n    reset = () => {\n        this.setState({contacts: [],\n    name: ''})\n    }\n    \n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this}>\n          Name\n          <input\n            type=\"text\"\n                    name=\"name\"\n                    id={this.id}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}