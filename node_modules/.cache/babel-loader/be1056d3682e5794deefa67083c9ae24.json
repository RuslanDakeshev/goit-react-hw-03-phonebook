{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport Form from './Form/Form';\nimport { Filter } from 'Filter/Filter';\nimport { ContactList } from 'ContactList/ContactList';\nimport { customAlphabet } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nanoid = customAlphabet('1234567890', 3);\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.handlerSubmit = data => {\n      const newContact = { ...data,\n        id: nanoid(),\n        name: data.name,\n        number: data.number\n      };\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return contacts.find(contact => contact.name === data.name) ? alert(`${data.name} is already in contacts`) : {\n          contacts: [newContact, ...contacts]\n        };\n      });\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n      const newContact = { ...data,\n        id: nanoid(),\n        name: data.name,\n        number: data.number\n      };\n      console.log(newContact);\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts]\n      }));\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state; // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handlerSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onFilter: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        deleteContact: this.deleteContact,\n        contacts: filteredContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","Component","Form","Filter","ContactList","customAlphabet","nanoid","App","state","contacts","id","name","number","filter","handlerSubmit","data","newContact","setState","find","contact","alert","formSubmitHandler","console","log","prevState","changeFilter","e","currentTarget","value","deleteContact","render","normalizedFilter","toLowerCase","filteredContacts","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,MAAMC,MAAM,GAAGD,cAAc,CAAC,YAAD,EAAe,CAAf,CAA7B;AAGA,OAAO,MAAME,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,CACV;AAACC,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,eAAnB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OADU,EAEV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,gBAAnB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAFU,EAGV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,eAAnB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAHU,EAIV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,gBAAnB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAJU,CADJ;AAONC,MAAAA,MAAM,EAAE;AAPF,KADyB;;AAAA,SAajCC,aAbiC,GAajBC,IAAI,IAAI;AAEtB,YAAMC,UAAU,GAAG,EACjB,GAAGD,IADc;AACRL,QAAAA,EAAE,EAAEJ,MAAM,EADF;AAGjBK,QAAAA,IAAI,EAAEI,IAAI,CAACJ,IAHM;AAIjBC,QAAAA,MAAM,EAAEG,IAAI,CAACH;AAJI,OAAnB;AAQA,WAAKK,QAAL,CAAc;AAAA,YAAC;AAAER,UAAAA;AAAF,SAAD;AAAA,eACZA,QAAQ,CAACS,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACR,IAAR,KAAiBI,IAAI,CAACJ,IAA/C,IACIS,KAAK,CAAE,GAAEL,IAAI,CAACJ,IAAK,yBAAd,CADT,GAEI;AAAEF,UAAAA,QAAQ,EAAC,CAACO,UAAD,EAAa,GAAGP,QAAhB;AAAX,SAHQ;AAAA,OAAd;AAMD,KA7BgC;;AAAA,SA+BjCY,iBA/BiC,GA+BbN,IAAI,IAAI;AAC1BO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,YAAMC,UAAU,GAAG,EACjB,GAAGD,IADc;AACRL,QAAAA,EAAE,EAAEJ,MAAM,EADF;AAGjBK,QAAAA,IAAI,EAAEI,IAAI,CAACJ,IAHM;AAIjBC,QAAAA,MAAM,EAAEG,IAAI,CAACH;AAJI,OAAnB;AAOAU,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,WAAKC,QAAL,CAAcO,SAAS,KAAK;AAE1Bf,QAAAA,QAAQ,EAAC,CAACO,UAAD,EAAa,GAAGQ,SAAS,CAACf,QAA1B;AAFiB,OAAL,CAAvB;AAKD,KA9CgC;;AAAA,SAgDjCgB,YAhDiC,GAgDjBC,CAAD,IAAO;AACxB,WAAKT,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAEa,CAAC,CAACC,aAAF,CAAgBC;AAAzB,OAAd;AACG,KAlDgC;;AAAA,SA2DjCC,aA3DiC,GA2DjBnB,EAAE,IAAI;AACpB,WAAKO,QAAL,CAAcO,SAAS,KAAK;AAC1Bf,QAAAA,QAAQ,EAAEe,SAAS,CAACf,QAAV,CAAmBI,MAAnB,CAA0BM,OAAO,IAAIA,OAAO,CAACT,EAAR,KAAeA,EAApD;AADgB,OAAL,CAAvB;AAGD,KA/DgC;AAAA;;AAiEjCoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,QAAF;AAAYI,MAAAA;AAAZ,QAAuB,KAAKL,KAAlC,CADO,CAGP;AACA;AACA;;AACA,UAAMuB,gBAAgB,GAAG,KAAKvB,KAAL,CAAWK,MAAX,CAAkBmB,WAAlB,EAAzB;AACA,UAAMC,gBAAgB,GAAGxB,QAAQ,CAACI,MAAT,CAAgBM,OAAO,IAAGA,OAAO,CAACR,IAAR,CAAaqB,WAAb,GAA2BE,QAA3B,CAAoCH,gBAApC,CAA1B,CAAzB;AAEA,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKjB;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,MAAf;AAAuB,QAAA,QAAQ,EAAE,KAAKY;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,WAAD;AAAa,QAAA,aAAa,EAAE,KAAKI,aAAjC;AAAgD,QAAA,QAAQ,EAAEI;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AASD;;AAnFgC","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form/Form';\nimport { Filter } from 'Filter/Filter';\nimport { ContactList } from 'ContactList/ContactList';\nimport { customAlphabet } from 'nanoid';\n\nconst nanoid = customAlphabet('1234567890', 3);\n\n\nexport class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: '',\n    \n  }\n  \n\n  handlerSubmit = data => {\n \n    const newContact = {\n      ...data, id: nanoid(),\n      \n      name: data.name,\n      number: data.number,\n      \n    };\n    \n    this.setState(({ contacts }) =>\n      contacts.find(contact => contact.name === data.name)\n        ? alert(`${data.name} is already in contacts`)\n        : { contacts:[newContact, ...contacts] }\n    );\n    \n  };\n  \n  formSubmitHandler = data => {\n    console.log(data);\n    const newContact = {\n      ...data, id: nanoid(),\n      \n      name: data.name,\n      number: data.number,\n      \n    };\n    console.log(newContact);\n    this.setState(prevState => ({\n      \n      contacts:[newContact, ...prevState.contacts]\n    }))\n    \n  }\n\n  changeFilter = (e) => {\nthis.setState({filter: e.currentTarget.value})\n  }\n\n  // onFilter = e => {\n  //   const { value } = e.currentTarget;\n  //   this.setState({ filter: value });\n  // };\n\n \n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact=> contact.name.toLowerCase().includes(normalizedFilter))\n\n    return (\n      <>\n        <Form onSubmit={this.handlerSubmit} />\n        \n        <Filter value={filter} onFilter={this.changeFilter} />\n        <ContactList deleteContact={this.deleteContact} contacts={filteredContacts} />\n        {/* <input type=\"text\" value={this.state.name} onChange={this.handleInputChange}/> */}\n      </>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}