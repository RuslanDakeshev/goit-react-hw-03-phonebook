{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport { Container } from 'components/App.styled';\nimport { Input, Label } from 'Filter/Filter.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nanoid = customAlphabet('1234567890', 3);\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: '',\n      number: '',\n      id: ''\n    };\n    this.nanoid = customAlphabet('1234567890abcdef', 10);\n    this.nameInputId = nanoid();\n    this.numberInputId = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: this.nameInputId,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          id: this.nameInputId,\n          value: this.state.name,\n          onChange: this.handleChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.numberInputId,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          id: this.numberInputId,\n          value: this.state.number,\n          onChange: this.handleChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"names":["React","Component","customAlphabet","Container","Input","Label","nanoid","Form","state","contacts","name","number","id","nameInputId","numberInputId","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,sBAA7B;;AAEA,MAAMC,MAAM,GAAGJ,cAAc,CAAC,YAAD,EAAe,CAAf,CAA7B;;AAEA,MAAMK,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,MAAM,EAAE,EAJJ;AAKNC,MAAAA,EAAE,EAAE;AALE,KADmB;AAAA,SAQzBN,MARyB,GAQhBJ,cAAc,CAAC,kBAAD,EAAqB,EAArB,CARE;AAAA,SASzBW,WATyB,GASXP,MAAM,EATK;AAAA,SAUzBQ,aAVyB,GAUTR,MAAM,EAVG;;AAAA,SAYzBS,YAZyB,GAYVC,CAAC,IAAI;AAChB,YAAM;AAAEN,QAAAA,IAAF;AAAQO,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACT,IAAD,GAAQO;AAAV,OAAd;AACH,KAfwB;;AAAA,SAsB3BG,YAtB2B,GAsBZJ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AAGF,WAAKgB,KAAL,CAAWC,QAAX,CAAoB,KAAKjB,KAAzB;AAEA,WAAKkB,KAAL;AACD,KA9B0B;;AAAA,SAgC3BA,KAhC2B,GAgCnB,MAAM;AACZ,WAAKP,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,IAAI,EAAE,EAAtB;AAA0BC,QAAAA,MAAM,EAAC;AAAjC,OAAd;AACD,KAlC0B;AAAA;;AAoC3BgB,EAAAA,MAAM,GAAG;AACL,wBAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKP,YAA1B;AAAA,8BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEF,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKP,WAArB;AAAA,wCAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,WAHX;AAIE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,IAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKK,YALjB;AAME,UAAA,OAAO,EAAC,wHANV;AAOE,UAAA,KAAK,EAAC,wIAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,eAgBF;AAAO,QAAA,OAAO,EAAE,KAAKD,aAArB;AAAA,0CAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,aAHX;AAIE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,MAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKI,YALjB;AAME,UAAA,OAAO,EAAC,wFANV;AAOE,UAAA,KAAK,EAAC,8FAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBE,eA8BQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAoCH;;AAzE0B;;AA4E7B,eAAeR,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { customAlphabet } from 'nanoid';\nimport { Container } from 'components/App.styled';\nimport { Input, Label } from 'Filter/Filter.styled';\n\nconst nanoid = customAlphabet('1234567890', 3);\n\nclass Form extends Component {\n  state = {\n    contacts: [\n   ],\n      name: '',\n      number: '',\n    id: '',\n  };\n    nanoid = customAlphabet('1234567890abcdef', 10);\n    nameInputId = nanoid();\n    numberInputId = nanoid();\n    \n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n//   handleNameChange = event => {\n//     // console.log(event.currentTarget.value);\n//     this.setState({ name: event.currentTarget.value });\n//   };\n\n  handleSubmit = e => {\n    e.preventDefault();\n      console.log(this.state);\n      \n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: [], name: '', number:'' });\n  };\n\n  render() {\n      return (\n        \n          <Container onSubmit={this.handleSubmit}>\n           <Wrapper></Wrapper>  \n        <Label htmlFor={this.nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberInputId}\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n                  <button type=\"submit\">Add contact</button>\n                  \n      </Container>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}