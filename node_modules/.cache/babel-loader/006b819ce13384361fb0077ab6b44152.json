{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-03-phonebook/src/components/Filter/Filter.jsx\";\nimport PropTypes from 'prop-types';\nimport { Wrapper, Label, Input } from \"./Filter.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = _ref => {\n  let {\n    value,\n    onFilter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: value,\n      onChange: onFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired\n}; //     <>\n//       <label>Find contacts by name</label>\n//       <input type=\"text\" value={this.state.filter} onChange={onFilter} />\n//     </>\n//   );\n// };\n// export const Filter = ({ value, onFilter }) => {\n//   return (\n//     <>\n//       <label htmlFor=\"filter\">Find contacts by name</label>\n//       <input name=\"filter\" type=\"text\" id=\"filter\" value={value} onChange={onFilter} />\n//     </>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-03-phonebook/src/components/Filter/Filter.jsx"],"names":["PropTypes","Wrapper","Label","Input","Filter","value","onFilter","propTypes","string","isRequired","func"],"mappings":";AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,QAAsC,iBAAtC;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AAC7C,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAiC,MAAA,QAAQ,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;KAAMF,M;AAQbA,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,KAAK,EAAEL,SAAS,CAACQ,MAAV,CAAiBC,UADP;AAEjBH,EAAAA,QAAQ,EAAEN,SAAS,CAACU,IAAV,CAAeD;AAFR,CAAnB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport { Wrapper, Label, Input } from \"./Filter.styled\"\n\nexport const Filter = ({ value, onFilter }) => {\n  return (\n    <Wrapper>\n      <Label>Find contacts by name</Label>\n      <Input type=\"text\" value={value} onChange={onFilter} />\n    </Wrapper>)\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\n\n//     <>\n//       <label>Find contacts by name</label>\n//       <input type=\"text\" value={this.state.filter} onChange={onFilter} />\n//     </>\n//   );\n// };\n\n// export const Filter = ({ value, onFilter }) => {\n//   return (\n//     <>\n//       <label htmlFor=\"filter\">Find contacts by name</label>\n//       <input name=\"filter\" type=\"text\" id=\"filter\" value={value} onChange={onFilter} />\n//     </>\n//   );\n// };"]},"metadata":{},"sourceType":"module"}