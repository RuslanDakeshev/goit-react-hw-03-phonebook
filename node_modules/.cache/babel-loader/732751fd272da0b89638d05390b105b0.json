{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: '',\n      number: ''\n    };\n    this.id = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleNameChange = event => {\n      // console.log(event.currentTarget.value);\n      this.setState({\n        name: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.id,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: this.id,\n          value: this.state.name,\n          onChange: this.handleNameChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.id,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          id: this.id,\n          value: this.state.number,\n          onChange: this.handleNameChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-02-phonebook/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"names":["React","Component","nanoid","Form","state","contacts","name","number","id","handleChange","e","value","currentTarget","setState","handleNameChange","event","handleSubmit","preventDefault","console","log","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAC;AAHD,KADmB;AAAA,SAOzBC,EAPyB,GAOpBN,MAAM,EAPc;;AAAA,SASzBO,YATyB,GASVC,CAAC,IAAI;AAChB,YAAM;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAC,SAACP,IAAD,GAAOK;AAAR,OAAd;AACH,KAZwB;;AAAA,SAc3BG,gBAd2B,GAcRC,KAAK,IAAI;AAC1B;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAES,KAAK,CAACH,aAAN,CAAoBD;AAA5B,OAAd;AACD,KAjB0B;;AAAA,SAmB3BK,YAnB2B,GAmBZN,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACO,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AAEA,WAAKgB,KAAL,CAAWC,QAAX,CAAoB,KAAKjB,KAAzB;AAEA,WAAKkB,KAAL;AACD,KA1B0B;;AAAA,SA4B3BA,KA5B2B,GA4BnB,MAAM;AACZ,WAAKT,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,IAAI,EAAE;AAAtB,OAAd;AACD,KA9B0B;AAAA;;AAgC3BiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAE,KAAKR,EAArB;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,EAHX;AAIE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,IAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKQ,gBALjB;AAME,UAAA,OAAO,EAAC,wHANV;AAOE,UAAA,KAAK,EAAC,wIAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAO,QAAA,OAAO,EAAE,KAAKN,EAArB;AAAA,0CAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,EAAE,EAAE,KAAKA,EAHX;AAIE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,MAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKO,gBALjB;AAME,UAAA,OAAO,EAAC,wFANV;AAOE,UAAA,KAAK,EAAC,8FAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA6BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAlE0B;;AAqE7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nclass Form extends Component {\n  state = {\n    contacts: [],\n      name: '',\n    number:'',\n  };\n\n    id = nanoid();\n    \n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({[name]:value})\n    }\n\n  handleNameChange = event => {\n    // console.log(event.currentTarget.value);\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: [], name: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.id}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.id}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label htmlFor={this.id}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.id}\n            value={this.state.number}\n            onChange={this.handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}