{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanruslan/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport Form from './Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList'; // import { customAlphabet } from 'nanoid';\n\nimport { Container, Title, Subtitle } from './App.styled'; // const nanoid = customAlphabet('1234567890', 3);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.handlerSubmit = data => {\n      // const newContact = {\n      //   ...data,\n      //   id: nanoid(),\n      // };\n      const isExist = this.state.contacts.find(contact => contact.name === data.name);\n\n      if (isExist) {\n        return alert(`${data.name} is already in contacts.`);\n      }\n\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [data, ...contacts]\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n  }\n\n  // handlerSubmit = data => {\n  // const newContact = {\n  //   ...data,\n  //   id: nanoid(),\n  //   name: data.name,\n  //   number: data.number,\n  // };\n  // this.setState(({ contacts }) =>\n  //   contacts.find(contact => contact.name === data.name)\n  //     ? alert(`${data.name} is already in contacts`)\n  //     : { contacts: [newContact, ...contacts] }\n  // );\n  componentDidUpdate(prewProps, prewState) {\n    const {\n      contacts\n    } = this.state;\n\n    if (prewState.contacts !== contacts) {\n      lo;\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state; // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handlerSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onFilter: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        deleteContact: this.deleteContact,\n        contacts: filteredContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruslanruslan/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","Component","Form","Filter","ContactList","Container","Title","Subtitle","App","state","contacts","id","name","number","filter","handlerSubmit","data","isExist","find","contact","alert","setState","changeFilter","e","currentTarget","value","deleteContact","prevState","componentDidUpdate","prewProps","prewState","lo","render","normalizedFilter","toLowerCase","filteredContacts","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { customAlphabet } from 'nanoid';\nimport { Container, Title, Subtitle } from './App.styled';\n\n// const nanoid = customAlphabet('1234567890', 3);\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  // handlerSubmit = data => {\n  // const newContact = {\n  //   ...data,\n  //   id: nanoid(),\n\n  //   name: data.name,\n  //   number: data.number,\n  // };\n\n  // this.setState(({ contacts }) =>\n  //   contacts.find(contact => contact.name === data.name)\n  //     ? alert(`${data.name} is already in contacts`)\n  //     : { contacts: [newContact, ...contacts] }\n  // );\n\n  componentDidUpdate(prewProps, prewState) {\n    const { contacts } = this.state;\n    if (prewState.contacts !== contacts) {\n      lo\n    }\n  }\n\n  handlerSubmit = data => {\n    // const newContact = {\n    //   ...data,\n    //   id: nanoid(),\n    // };\n\n    const isExist = this.state.contacts.find(\n      contact => contact.name === data.name\n    );\n\n    if (isExist) {\n      return alert(`${data.name} is already in contacts.`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  // formSubmitHandler = data => {\n  //   console.log(data);\n  //   const newContact = {\n  //     ...data, id: nanoid(),\n\n  //     name: data.name,\n  //     number: data.number,\n\n  //   };\n  //   console.log(newContact);\n  //   this.setState(prevState => ({\n\n  //     contacts:[newContact, ...prevState.contacts]\n  //   }))\n\n  // }\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  // onFilter = e => {\n  //   const { value } = e.currentTarget;\n  //   this.setState({ filter: value });\n  // };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <Form onSubmit={this.handlerSubmit} />\n        <Subtitle>Contacts</Subtitle>\n\n        <Filter value={filter} onFilter={this.changeFilter} />\n        <ContactList\n          deleteContact={this.deleteContact}\n          contacts={filteredContacts}\n        />\n        {/* <input type=\"text\" value={this.state.name} onChange={this.handleInputChange}/> */}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}